@model IEnumerable<eventEaseBookingSystem.Models.Event>

@{
    ViewData["Title"] = "Events";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-calendar-alt text-success"></i> Events</h1>
    <a asp-action="Create" class="btn btn-success">
        <i class="fas fa-plus"></i> Create New Event
    </a>
</div>

<!-- Advanced Search and Filter Form -->
<div class="card mb-4">
    <div class="card-body">
        <h5 class="card-title"><i class="fas fa-filter"></i> Advanced Search & Filter</h5>
        <form asp-action="Index" method="get" class="row g-3">
            <div class="col-md-3">
                <label for="searchString" class="form-label">Search Events</label>
                <input type="text" class="form-control" id="searchString" name="searchString" 
                       value="@ViewData["CurrentFilter"]" placeholder="Event name, description, or venue">
            </div>            <div class="col-md-2">
                <label for="eventType" class="form-label">Event Type</label>
                <select class="form-select" id="eventType" name="eventType" asp-items="@((SelectList)ViewData["EventTypes"])">
                    <option value="">All Types</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="venueId" class="form-label">Venue</label>
                <select class="form-select" id="venueId" name="venueId" asp-items="@((SelectList)ViewData["Venues"])">
                    <option value="">All Venues</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="startDate" class="form-label">From Date</label>
                <input type="date" class="form-control" id="startDate" name="startDate" 
                       value="@ViewData["StartDate"]">
            </div>            <div class="col-md-2">
                <label for="endDate" class="form-label">To Date</label>
                <input type="date" class="form-control" id="endDate" name="endDate" 
                       value="@ViewData["EndDate"]">
            </div>
            <div class="col-md-1 d-flex align-items-end">
                <div class="d-grid w-100">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        @if (!string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) || 
             ViewData["EventType"] != null || ViewData["VenueId"] != null ||
             !string.IsNullOrEmpty(ViewData["StartDate"]?.ToString()) ||
             !string.IsNullOrEmpty(ViewData["EndDate"]?.ToString()))
        {
            <div class="mt-2">
                <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
                    <i class="fas fa-times"></i> Clear Filters
                </a>
            </div>
        }
    </div>
</div>

<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-6 col-lg-4 mb-4">
            <div class="card h-100 shadow-sm">                <div class="card-body d-flex flex-column">
                    <div class="d-flex justify-content-between align-items-start mb-2">
                        <h5 class="card-title text-success mb-0">@Html.DisplayFor(modelItem => item.EventName)</h5>
                        <span class="badge bg-info">@Html.DisplayFor(modelItem => item.EventType)</span>
                    </div>
                    <p class="card-text mb-1">
                        <i class="fas fa-calendar text-muted"></i> @Html.DisplayFor(modelItem => item.EventDate)
                    </p>
                    <p class="card-text mb-2">
                        <i class="fas fa-building text-muted"></i> @Html.DisplayFor(modelItem => item.Venue.VenueName)
                    </p>
                    @if (!string.IsNullOrEmpty(item.Description))
                    {
                        <p class="card-text flex-grow-1">
                            <i class="fas fa-info-circle text-muted"></i> @Html.DisplayFor(modelItem => item.Description)
                        </p>
                    }
                    <div class="mt-auto">
                        <div class="btn-group w-100" role="group">
                            <a asp-action="Edit" asp-route-id="@item.EventId" class="btn btn-warning btn-sm">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                            <a asp-action="Details" asp-route-id="@item.EventId" class="btn btn-info btn-sm">
                                <i class="fas fa-eye"></i> Details
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.EventId" class="btn btn-danger btn-sm">
                                <i class="fas fa-trash"></i> Delete
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@if (!Model.Any())
{
    <div class="text-center mt-5">
        <i class="fas fa-calendar-alt fa-4x text-muted mb-3"></i>
        <h4 class="text-muted">No events found</h4>
        <p class="text-muted">Start by creating your first event.</p>
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus"></i> Create First Event
        </a>
    </div>
}
