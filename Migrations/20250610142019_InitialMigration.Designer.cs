// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eventEaseBookingSystem.Data;

#nullable disable

namespace eventEaseBookingSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250610142019_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eventEaseBookingSystem.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("VenueId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("EventId");

                    b.HasIndex("VenueId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            BookingDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            EventId = 1,
                            VenueId = 1
                        },
                        new
                        {
                            BookingId = 2,
                            BookingDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            EventId = 2,
                            VenueId = 3
                        });
                });

            modelBuilder.Entity("eventEaseBookingSystem.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("VenueId")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("VenueId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            Description = "Annual company gala event",
                            EventDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            EventName = "Annual Gala",
                            VenueId = 1
                        },
                        new
                        {
                            EventId = 2,
                            Description = "New product launch presentation",
                            EventDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            EventName = "Product Launch",
                            VenueId = 3
                        });
                });

            modelBuilder.Entity("eventEaseBookingSystem.Models.Venue", b =>
                {
                    b.Property<int>("VenueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VenueId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VenueId");

                    b.ToTable("Venues");

                    b.HasData(
                        new
                        {
                            VenueId = 1,
                            Capacity = 500,
                            ImageUrl = "https://images.unsplash.com/photo-1519167758481-83f29b1fe317?w=400",
                            Location = "Downtown Convention Center",
                            VenueName = "Grand Ballroom"
                        },
                        new
                        {
                            VenueId = 2,
                            Capacity = 200,
                            ImageUrl = "https://images.unsplash.com/photo-1464366400600-7168b8af9bc3?w=400",
                            Location = "City Park",
                            VenueName = "Garden Pavilion"
                        },
                        new
                        {
                            VenueId = 3,
                            Capacity = 100,
                            ImageUrl = "https://images.unsplash.com/photo-1475721027785-f74eccf877e2?w=400",
                            Location = "Business District",
                            VenueName = "Conference Hall A"
                        });
                });

            modelBuilder.Entity("eventEaseBookingSystem.Models.Booking", b =>
                {
                    b.HasOne("eventEaseBookingSystem.Models.Event", "Event")
                        .WithMany("Bookings")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eventEaseBookingSystem.Models.Venue", "Venue")
                        .WithMany("Bookings")
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("eventEaseBookingSystem.Models.Event", b =>
                {
                    b.HasOne("eventEaseBookingSystem.Models.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("eventEaseBookingSystem.Models.Event", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("eventEaseBookingSystem.Models.Venue", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
